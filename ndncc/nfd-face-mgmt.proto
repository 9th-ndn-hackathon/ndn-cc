syntax = "proto2";
package ndn_message;

message Name {
  repeated bytes component = 8;
}

// Protobuf has no "outer" message type, so we need to put the TLV XXX
// message inside an outer "typeless" XXXMessage.
message FaceEventNotificationMessage {
  message FaceEventNotification {
    required uint32 face_event_kind = 193;
    required uint64 face_id = 105;
    required bytes uri = 114;
    required bytes local_uri = 129;
    required uint32 face_scope = 132;
    required uint32 face_persistency = 133;
    required uint32 link_type = 134;
    required uint64 flags = 108;
  }

  // A RepoCommandResponseMessage has one RepoCommandResponse.
  required FaceEventNotification face_event_notification = 192;
}

message ControlCommandMessage {
  message ControlParameters {
    optional Name name = 7;
    optional uint64 face_id = 105;
    optional bytes uri = 114;
    optional bytes local_uri = 129;
    optional uint64 origin = 111;
    optional uint64 cost = 106;
    optional uint64 capacity = 131;
    optional uint64 count = 132;
    optional uint64 base_cong_mark = 135;
    optional uint64 def_cong_thres = 136;
    optional uint64 mtu = 137;
    optional uint64 flags = 108;
    optional uint64 mask = 112;
    optional Name strategy = 107;
    optional uint64 exp_period = 109;
  }

  // A RepoCommandParameterMessage has one RepoCommandParameter.
  required ControlParameters control_parameters = 104;
}

message ControlResponseMessage {
  message ControlResponse {
    optional uint64 st_code = 102;
    optional bytes st_text = 103;
  }

  // A RepoCommandParameterMessage has one RepoCommandParameter.
  required ControlResponse control_response = 101;
}
